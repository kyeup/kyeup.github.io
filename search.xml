<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[如何理解redo和undo的作用]]></title>
    <url>%2F2018%2F07%2F03%2F%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3redo%E5%92%8Cundo%E7%9A%84%E4%BD%9C%E7%94%A8%2F</url>
    <content type="text"><![CDATA[如何理解redo和undo的作用redo重做日志（redo）包含所有数据产生的历史改变记录，是oracle在线或归档重做日志文件中记录的信息，一旦掉电或其他意外丢失数据，可以利用这些数据来重做事务，例如已经出现了丢失数据的情况，那么就可以利用redo来重放事务，通常用于实例恢复和介质恢复、日志挖掘和流（分析redo，捕获实时数据，传到远程数据库，并应用于远程数据库）。Redo中保存的内容是改变向量，改变数据块的大小，是对数据块的覆盖。 undoundo是oracle在undo段中记录的信息，用于取消或回滚事务，例如对数据进行修改时，数据库会产生undo信息，若数据出现丢失，可采用rollback请求回滚，可以利用这些undo信息将数据放回到修改前的样子。UNDO的作用包括了数据的回滚、一致性读、表的闪回以及失败会话的恢复。它的流程：当update一个数据块时，在开始时需要从内存中找到这个数据块，在undo中放入数据块放之前的值old data在undosegment中，这时候就会产生undo，oracle就会对原始数据更新值，也会产生redo。 UNDO和REDO的区别 Undo里是怎么样去撤销一个改变；redo里是怎么养去重做一个改变； Undo用于回滚、一致性读（readconsistency）和闪回（flashback）；redo用于数据库前滚（rolling forward）、恢复和数据的改变； Undo放在undo表空间中；redo是放在redo日志文件中； Undo是来保护一致性读；redo来保证数据不丢失。]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>基础知识</tag>
        <tag>redo</tag>
        <tag>undo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle 了解 DDL 操作与 REDO 的关系]]></title>
    <url>%2F2018%2F06%2F28%2F%E4%BA%86%E8%A7%A3%20DDL%20%E6%93%8D%E4%BD%9C%E4%B8%8E%20REDO%20%E7%9A%84%E5%85%B3%E7%B3%BB%2F</url>
    <content type="text"><![CDATA[了解 DDL 操作与 REDO 的关系DDL是否会产生REDO用到的SQL： 123456---查看redo的大小SQL&gt; select b.name,a.value from v$mystat a,v$statname b where a.statistic#=b.statistic# and b.name=&apos;redo size&apos;;NAME VALUE-------------------------------------- ----------redo size 0 —创建一个表，查看产生的redo大小123456789SQL&gt; create table kyeup_tb1 as select * from v$datafile;Table created.SQL&gt; select b.name,a.value from v$mystat a,v$statname b where a.statistic#=b.statistic# and b.name=&apos;redo size&apos;;NAME VALUE------------------ ----------redo size 61072 —从上面看出创建表的时候redo大小为61072字节，那么删除这个表会产生redo多大呢？123456789SQL&gt; drop table kyeup_tb1;Table dropped.SQL&gt; select b.name,a.value from v$mystat a,v$statname b where a.statistic#=b.statistic# and b.name=&apos;redo size&apos;;NAME VALUE----------------- ----------redo size 101420 —drop表产生的redo大小：101420-61072= 40348 drop table 语句产生 bytes 的 redo 数据，少于 create table； 这里我们需要查看 DDL 语句执行过程。 通过 10046 trace 来分析create 和drop可能是 create table 时 Oracle 需要向基表中 insert 数据，而 drop table时则需要delete/update 数据 我们下面用 10046 来跟踪一下 create table 与 drop table 到底做了哪些操作？123456789101112131415161718192021SQL&gt; select b.name,a.value from v$mystat a,v$statname b where a.statistic#=b.statistic# and b.name=&apos;redo size&apos;;NAME VALUE---------------------------------------------------------------- ----------redo size 0SQL&gt; oradebug setmypid;Statement processed.SQL&gt; oradebug tracefile_name;/oracle/app/oracle/diag/rdbms/kyeupdbfs/kyeupdbfs/trace/kyeupdbfs_ora_55251.trcSQL&gt; oradebug event 10046 trace name context forever,level 1;Statement processed.SQL&gt; create table kyeuptb1(id int,name varchar2(12));Table created.SQL&gt; select b.name,a.value from v$mystat a,v$statname b where a.statistic#=b.statistic# and b.name=&apos;redo size&apos;;NAME VALUE---------------------------------------------------------------- ----------redo size 8880 —分析trace12345678910111213[root@kyeupdbfs ~]# cat /oracle/app/oracle/diag/rdbms/kyeupdbfs/kyeupdbfs/trace/kyeupdbfs_ora_55251.trc |egrep &apos;insert|update|delete|create&apos;create table kyeuptb1(id m_stmt:=&apos;insert into sdo_geor_ddl__table$$ values (1)&apos;; m_stmt:=&apos;insert into sdo_geor_ddl__table$$ values (2)&apos;; m_stmt:=&apos;call mderr.raise_md_error(&apos;&apos;MD&apos;&apos;, &apos;&apos;SDO&apos;&apos;, -13391, &apos;&apos;GeoRaster reserved names cannot be used to create regular triggers.&apos;&apos;)&apos;;insert into obj$(owner#,name,namespace,obj#,type#,ctime,mtime,stime,status,remoteowner,linkname,subname,dataobj#,flags,oid$,spare1,spare2,spare3) values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,:17,:18)insert into seg$ (file#,block#,type#,ts#,blocks,extents,minexts,maxexts,extsize,extpct,user#,iniexts,lists,groups,cachehint,hwmincr, spare1, scanhint, bitmapranges) values (:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13,:14,:15,:16,DECODE(:17,0,NULL,:17),:18,:19)insert into tab$(obj#,ts#,file#,block#,bobj#,tab#,intcols,kernelcols,clucols,audit$,flags,pctfree$,pctused$,initrans,maxtrans,rowcnt,blkcnt,empcnt,avgspc,chncnt,avgrln,analyzetime,samplesize,cols,property,degree,instances,dataobj#,avgspc_flb,flbcnt,trigflag,spare1,spare6)values(:1,:2,:3,:4,decode(:5,0,null,:5),decode(:6,0,null,:6),:7,:8,decode(:9,0,null,:9),:10,:11,:12,:13,:14,:15,:16,:17,:18,:19,:20,:21,:22,:23,:24,:25,decode(:26,1,null,:26),decode(:27,1,null,:27),:28,:29,:30,:31,:32,:33)insert into col$(obj#,name,intcol#,segcol#,type#,length,precision#,scale,null$,offset,fixedstorage,segcollength,deflength,default$,col#,property,charsetid,charsetform,spare1,spare2,spare3)values(:1,:2,:3,:4,:5,:6,decode(:5,182/*DTYIYM*/,:7,183/*DTYIDS*/,:7,decode(:7,0,null,:7)),decode(:5,2,decode(:8,-127/*MAXSB1MINAL*/,null,:8),178,:8,179,:8,180,:8,181,:8,182,:8,183,:8,231,:8,null),:9,0,:10,:11,decode(:12,0,null,:12),:13,:14,:15,:16,:17,:18,:19,:20) m_stmt:=&apos;begin SDO_GEOR_UTL.createDMLTrigger(:1,:2); end;&apos;; m_stmt:=&apos;delete from sdo_geor_ddl__table$$ where id=2&apos;; m_stmt:=&apos;delete from sdo_geor_ddl__table$$&apos;;update seg$ set type#=:4,blocks=:5,extents=:6,minexts=:7,maxexts=:8,extsize=:9,extpct=:10,user#=:11,iniexts=:12,lists=decode(:13, 65535, NULL, :13),groups=decode(:14, 65535, NULL, :14), cachehint=:15, hwmincr=:16, spare1=DECODE(:17,0,NULL,:17),scanhint=:18, bitmapranges=:19 where ts#=:1 and file#=:2 and block#=:3 —create表的时候进行了insert，update等操作，现在开始跟踪下drop表(退出来重新做)123456789101112131415161718192021SQL&gt; select b.name,a.value from v$mystat a,v$statname b where a.statistic#=b.statistic# and b.name=&apos;redo size&apos;;NAME VALUE---------------------------------------------------------------- ----------redo size 0SQL&gt; oradebug setmypid;Statement processed.SQL&gt; oradebug tracefile_name;/oracle/app/oracle/diag/rdbms/kyeupdbfs/kyeupdbfs/trace/kyeupdbfs_ora_55296.trcSQL&gt; oradebug event 10046 trace name context forever,level 1;Statement processed.SQL&gt; drop table kyeuptb1;Table dropped.SQL&gt; select b.name,a.value from v$mystat a,v$statname b where a.statistic#=b.statistic# and b.name=&apos;redo size&apos;;NAME VALUE---------------------------------------------------------------- ----------redo size 8552 —drop产生的redo要比create产生的要少；分析trace123456789101112131415161718192021222324252627282930313233343536373839404142[root@kyeupdbfs ~]# cat /oracle/app/oracle/diag/rdbms/kyeupdbfs/kyeupdbfs/trace/kyeupdbfs_ora_55296.trc |egrep &apos;insert|update|delete|create&apos; &apos;Need use delete_topo_geometry_layer() to deregister table &apos; m_stmt:=&apos;insert into sdo_geor_ddl__table$$ values (1)&apos;; m_stmt:=&apos;insert into sdo_geor_ddl__table$$ values (2)&apos;; m_stmt:=&apos;call mderr.raise_md_error(&apos;&apos;MD&apos;&apos;, &apos;&apos;SDO&apos;&apos;, -13391, &apos;&apos;GeoRaster reserved names cannot be used to create regular triggers.&apos;&apos;)&apos;;insert into sdo_geor_ddl__table$$ values (2)select decode(u.type#, 2, u.ext_username, u.name), o.name, t.update$, t.insert$, t.delete$, t.enabled, decode(bitand(t.property, 8192),8192, 1, 0), decode(bitand(t.property, 65536), 65536, 1, 0), decode(bitand(t.property, 131072), 131072, 1, 0), (select o.name from obj$ o where o.obj# = u.spare2 and o.type# =57) from sys.obj$ o, sys.user$ u, sys.trigger$ t, sys.obj$ bo where t.baseobject=bo.obj# and bo.name = :1 and bo.spare3 = :2 and bo.namespace = 1 and t.obj#=o.obj# and o.owner#=u.user# and o.type# = 12 and bitand(property,16)=0 and bitand(property,8)=0 order by o.obj#delete from object_usage where obj# in (select a.obj# from object_usage a, ind$ b where a.obj# = b.obj# and b.bo# = :1)delete from sys.cache_stats_1$ where dataobj# = :1delete com$ where obj#=:1delete from hist_head$ where obj# = :1delete from compression$ where obj#=:1 m_stmt:=&apos;begin SDO_GEOR_UTL.createDMLTrigger(:1,:2); end;&apos;; m_stmt:=&apos;delete from sdo_geor_ddl__table$$ where id=2&apos;; m_stmt:=&apos;delete from sdo_geor_ddl__table$$&apos;;delete from sdo_geor_ddl__table$$ where id=2delete from col$ where obj#=:1delete from icol$ where bo#=:1delete from icoldep$ where obj# in (select obj# from ind$ where bo#=:1)delete from jijoin$ where obj# in ( select obj# from jijoin$ where tab1obj# = :1 or tab2obj# = :1)delete from jirefreshsql$ where iobj# in ( select iobj# from jirefreshsql$ where tobj# = :1)delete from ccol$ where obj#=:1delete from ind$ where bo#=:1delete from cdef$ where obj#=:1delete ecol$ where tabobj# = :1delete from tab$ where obj#=:1delete from idl_ub1$ where obj#=:1 and part=:2delete from idl_char$ where obj#=:1 and part=:2delete from idl_ub2$ where obj#=:1 and part=:2delete from idl_sb4$ where obj#=:1 and part=:2delete from ncomp_dll$ where obj#=:1 returning dllname into :2delete coltype$ where obj#=:1delete from subcoltype$ where obj#=:1delete ntab$ where obj#=:1delete lob$ where obj#=:1delete refcon$ where obj#=:1delete from opqtype$ where obj#=:1delete from cdef$ where obj#=:1delete from objauth$ where obj#=:1delete from obj$ where obj# = :1update seg$ set type#=:4,blocks=:5,extents=:6,minexts=:7,maxexts=:8,extsize=:9,extpct=:10,user#=:11,iniexts=:12,lists=decode(:13, 65535, NULL, :13),groups=decode(:14, 65535, NULL, :14), cachehint=:15, hwmincr=:16, spare1=DECODE(:17,0,NULL,:17),scanhint=:18, bitmapranges=:19 where ts#=:1 and file#=:2 and block#=:3delete from seg$ where ts#=:1 and file#=:2 and block#=:3 如果drop失败，redo的变化123456789101112131415161718192021222324252627282930313233343536373839SQL&gt; select b.name,a.value from v$mystat a,v$statname b where a.statistic#=b.statistic# and b.name=&apos;redo size&apos;;NAME VALUE---------------------------------------------------------------- ----------redo size 0SQL&gt; oradebug setmypid;Statement processed.SQL&gt; oradebug tracefile_name;/oracle/app/oracle/diag/rdbms/kyeupdbfs/kyeupdbfs/trace/kyeupdbfs_ora_55343.trcSQL&gt; oradebug event 10046 trace name context forever,level 1;Statement processed.SQL&gt; drop table kyeuptb111;drop table kyeuptb111 *ERROR at line 1:ORA-00942: table or view does not existSQL&gt; select b.name,a.value from v$mystat a,v$statname b where a.statistic#=b.statistic# and b.name=&apos;redo size&apos;;NAME VALUE---------------------------------------------------------------- ----------redo size 384SQL&gt; create table aa;create table aa *ERROR at line 1:ORA-00906: missing left parenthesisSQL&gt; select b.name,a.value from v$mystat a,v$statname b where a.statistic#=b.statistic# and b.name=&apos;redo size&apos;;NAME VALUE---------------------------------------------------------------- ----------redo size 384SQL&gt; 在create失败的时候不会产生redo，但是drop失败的时候是产生redo的(在删除的时候有insert into发生； —分析如下12345678[root@kyeupdbfs ~]# cat /oracle/app/oracle/diag/rdbms/kyeupdbfs/kyeupdbfs/trace/kyeupdbfs_ora_55343.trc |egrep &apos;insert|update|delete|create&apos; &apos;Need use delete_topo_geometry_layer() to deregister table &apos; m_stmt:=&apos;insert into sdo_geor_ddl__table$$ values (1)&apos;; m_stmt:=&apos;insert into sdo_geor_ddl__table$$ values (2)&apos;; m_stmt:=&apos;call mderr.raise_md_error(&apos;&apos;MD&apos;&apos;, &apos;&apos;SDO&apos;&apos;, -13391, &apos;&apos;GeoRaster reserved names cannot be used to create regular triggers.&apos;&apos;)&apos;;insert into sdo_geor_ddl__table$$ values (2)create table aa [root@kyeupdbfs ~]#]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>trace</tag>
        <tag>redo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle审计相关对象的迁移]]></title>
    <url>%2F2018%2F06%2F26%2FOracle%E5%AE%A1%E8%AE%A1%E7%9B%B8%E5%85%B3%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%BF%81%E7%A7%BB%2F</url>
    <content type="text"><![CDATA[在日常的数据库维护中，经常出现因为数据库登录审计的功能启动,导致system表空间被用满.从而出现异常,一般建议把aud$相关对象迁移到其他表空间,从而避免system被用完的风险.步骤如下： 创建审计用的表空间1234SYS@kyeupdbfs&gt; create tablespace audit_data logging datafile &apos;/oracle/oradata/kyeupdbfs/audit_data.dbf&apos; 2 size 20m autoextend off extent management local segment space management auto;Tablespace created. 在线迁移12345678910111213141516171819SYS@kyeupdbfs&gt; alter table aud$ move tablespace audit_data;Table altered.SYS@kyeupdbfs&gt; alter table audit$ move tablespace audit_data;Table altered.SYS@kyeupdbfs&gt; alter table audit_actions move tablespace audit_data;Table altered.SYS@kyeupdbfs&gt; alter index i_audit rebuild online tablespace audit_data;Index altered.SYS@kyeupdbfs&gt; alter index i_audit_actions rebuild online tablespace audit_data;Index altered. 查询结果`select table_name,tablespace_name from dba_tables where table_name like ‘%AUD%’;select index_name,tablespace_name from dba_indexes where table_name like ‘%AUD%’;select table_name,tablespace_name from dba_tables where tablespace_name=’AUDIT_DATA’;select index_name,tablespace_name from dba_indexes where tablespace_name=’AUDIT_DATA’;]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>审计</tag>
        <tag>迁移</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle跟踪分析数据库启动的各个阶段]]></title>
    <url>%2F2018%2F06%2F26%2FOracle%E8%B7%9F%E8%B8%AA%E5%88%86%E6%9E%90%E6%95%B0%E6%8D%AE%E5%BA%93%E5%90%AF%E5%8A%A8%E7%9A%84%E5%90%84%E4%B8%AA%E9%98%B6%E6%AE%B5%2F</url>
    <content type="text"><![CDATA[演示如下： 启动到nomount状态12345678SYS@kyeupdbfs&gt; startup nomount;ORACLE instance started.Total System Global Area 1720328192 bytesFixed Size 2253944 bytesVariable Size 754977672 bytesDatabase Buffers 956301312 bytesRedo Buffers 6795264 bytes 设置trace1234567SYS@kyeupdbfs&gt; oradebug setmypid;Statement processed.SYS@kyeupdbfs&gt; oradebug tracefile_name;/oracle/app/oracle/diag/rdbms/kyeupdbfs/kyeupdbfs/trace/kyeupdbfs_ora_13343.trcSYS@kyeupdbfs&gt; alter session set events &apos;10046 trace name context forever,level 12&apos;;Session altered. 启动数据库到mount状态并打开1234567SYS@kyeupdbfs&gt; alter database mount;Database altered.SYS@kyeupdbfs&gt; alter database open;Database altered. 查阅trace1路径：/oracle/app/oracle/diag/rdbms/kyeupdbfs/kyeupdbfs/trace/kyeupdbfs_ora_13343.trc 查阅trace的另外方法 v$diag_info 视图123456789SYS@kyeupdbfs&gt; select * from v$diag_info where name like &apos;%Trace%&apos;; INST_ID NAME VALUE---------- -------------------- -------------------------------------------------- 1 Diag Trace /oracle/app/oracle/diag/rdbms/kyeupdbfs/kyeupdbfs/ trace 1 Default Trace File /oracle/app/oracle/diag/rdbms/kyeupdbfs/kyeupdbfs/ trace/kyeupdbfs_ora_13343.trc]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>trace</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[oracle数据库DB_NAME、DBID、DB_UNIQUE_NAME等的区别]]></title>
    <url>%2F2018%2F06%2F25%2Foracle%E6%95%B0%E6%8D%AE%E5%BA%93DB_NAME%E3%80%81DBID%E3%80%81DB_UNIQUE_NAME%E7%AD%89%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[DB_NAME①是数据库名，长度不能超过8个字符，记录在datafile、redolog和control file中 ②在DataGuard环境中DB_NAME相同而DB_UNIQUE_NAME不同 ③在RAC环境中，各个节点的DB_NAME 都相同，但是INSTANCE_NAME不同 ④DB_NAME还在动态注册监听的时候起作用，无论是否定义了SERVICE_NAME,PMON进程都会使用DB_NAME动态注册监听 DBID①DBID可以看做是DB_NAME在数据库内部的表示，它是在数据库创建的时候用DB_NAME结合算法计算出来的 ②它存在于datafile和control file中，用来表示数据文件的归属，所以DBID是唯一的，对于不同的数据库，DB_NAME可以是相同的，但是DBID一定是唯一的，例如在DataGuard中，主备库的DB_NAME相同，但是DBID一定不同（看过一个很形象的例子，就是可以有同名的人，但是身份证号码一定不同） DB_UNIQUE_NAME：①在DataGuard中，主备库拥有相同的DB_NAME，为了区别，就必须有不同的DB_UNIQUE_NAME ②DB_UNIQUE_NAME在DG中会影响动态注册的SERVICE_NAME，即如果采用的是动态注册，则注册的SERVICE_NAME为DB_UNIQUE_NAME，但是实例还是INSTANCE_NAME，即SID INSTANCE_NAME：①数据库实例的名称，INSTANCE_NAME默认值是SID，一般情况下和数据库名称（DB_NAME)相同，也可不同 ②initSID.ora 和orapwSID 文件要与INSTANCE_NAME保持一致 ③INSTANCE_NAME会影响进程的名称 SID：①是操作系统中的环境变量，和ORACLE_HOME,ORACLE_BASE用法相同 ②在操作系统中要想得到实例名，就必须使用ORACLE_SID。且ORACLE_SID必须与INSTANCE_NAME的值一致 SERVICE_NAME①数据库和客户端相连是使用的服务名 ②在DataGuard中，如果采用动态注册，建议在主备库使用相同的service_names ③在DataGuard中，如果采用静态注册，建议在主备库上的listener中输入相同的服务名(service_name) ④如果采监听采用了静态注册，那么SERVICE_NAME就等于Listener.ora文件中的GLOBAL_DATABASE_NAME的值 GLOBAL_DATABASE_NAME：①GLOBAL_DATABASE_NAME 是listener配置的对外网络连接名称，可以是任意值 ②在客户端配置监听的tnsnames.ora 文件中的service_name与这个GLOBAL_DBNAME 保持一致就可以了 ③配置静态监听注册时，需要输入SID和GLOBAL_NAME 本文摘自于地址：http://www.itpux.com/thread-236-1-1.html]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>base</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解决debian 9 重启nameserver失效问题]]></title>
    <url>%2F2018%2F06%2F23%2F%E8%A7%A3%E5%86%B3debian%209%20%E9%87%8D%E5%90%AFnameserver%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[解决debian 9 重启nameserver失效问题刚安装完debian9，用过之后会发现/etc/resolv.conf中配置文件重启后丢失，为了解决此问题需要安装包：resolfconf 安装resolvconf1kyeup@Dellpri:~$ sudo apt-get install resolfconf 编辑文件123456789101112kyeup@Dellpri:/etc/resolvconf/resolv.conf.d$ ls -al总用量 12drwxr-xr-x 2 root root 4096 6月 23 18:40 .drwxr-xr-x 5 root root 4096 6月 23 17:58 ..-rw-r--r-- 1 root root 0 4月 1 2016 base-rw-r--r-- 1 root root 199 6月 23 18:40 headlrwxrwxrwx 1 root root 35 6月 23 17:44 original -&gt; /var/run/NetworkManager/resolv.conf-rw-r--r-- 1 root root 0 6月 23 17:58 tailkyeup@Dellpri:/etc/resolvconf/resolv.conf.d$ sudo vi head ## 添加内容nameserver 8.8.8.8nameserver 114.114.114.114 除了以上方法以外，还有一种办法，修改网卡配置信息：12345678910kyeup@Dellpri:~$ sudo vi /etc/network/interfacesauto loiface lo inet loopbackauto enp19s0iface enp19s0 inet static address 192.168.1.253/24 gateway 192.168.1.1 dns-nameservers 8.8.8.8 dns-nameservers 114.114.114.114~ 测试可以重启测试。]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>troubleshooting</tag>
        <tag>debian</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[oracle 控制文件的重建]]></title>
    <url>%2F2018%2F06%2F22%2F%E6%8E%A7%E5%88%B6%E6%96%87%E4%BB%B6%E7%9A%84%E9%87%8D%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[不到最后时刻，如三个控制文件都已损坏，又没有控制文件的备份。还是不要重建控制文件，处理不好就会有数据丢失。 NORESETLOGS 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354Set #1. NORESETLOGS case---- The following commands will create a new control file and use it-- to open the database.-- Data used by Recovery Manager will be lost.-- Additional logs may be required for media recovery of offline-- Use this only if the current versions of all online logs are-- available.-- After mounting the created controlfile, the following SQL-- statement will place the database in the appropriate-- protection mode:-- ALTER DATABASE SET STANDBY DATABASE TO MAXIMIZE PERFORMANCESTARTUP NOMOUNTCREATE CONTROLFILE REUSE DATABASE &quot;KYEUPDB&quot; NORESETLOGS NOARCHIVELOG MAXLOGFILES 16 MAXLOGMEMBERS 3 MAXDATAFILES 4096 MAXINSTANCES 8 MAXLOGHISTORY 292LOGFILE GROUP 1 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_1.266.978829167&apos; SIZE 200M BLOCKSIZE 512, GROUP 2 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_2.267.978829169&apos; SIZE 200M BLOCKSIZE 512, GROUP 3 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_3.268.978829173&apos; SIZE 200M BLOCKSIZE 512, GROUP 4 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_4.269.978829183&apos; SIZE 200M BLOCKSIZE 512, GROUP 5 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_5.270.978829193&apos; SIZE 200M BLOCKSIZE 512-- STANDBY LOGFILEDATAFILE &apos;+DGSYSTEM/kyeupdb/datafile/system.271.978829205&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/sysaux.272.978829265&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/undotbs1.273.978829323&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/users.275.978829391&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/ts_example.277.978855421&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/kye_tbs02.dbf&apos;CHARACTER SET ZHS16GBK;-- Commands to re-create incarnation table-- Below log names MUST be changed to existing filenames on-- disk. Any one log file from each branch can be used to-- re-create incarnation records.-- ALTER DATABASE REGISTER LOGFILE &apos;/oracle/app/oracle/product/11.2.0/dbs/arch1_1_978829161.dbf&apos;;-- Recovery is required if any of the datafiles are restored backups,-- or if the last shutdown was not normal or immediate.RECOVER DATABASE-- Database can now be opened normally.ALTER DATABASE OPEN;-- Files in normal offline tablespaces are now named.ALTER DATABASE RENAME FILE &apos;MISSING00006&apos; TO &apos;+DGSYSTEM/kyeupdb/datafile/kye_tbs01.dbf&apos;;-- Commands to add tempfiles to temporary tablespaces.-- Online tempfiles have complete space information.-- Other tempfiles may require adjustment.ALTER TABLESPACE TEMP ADD TEMPFILE &apos;+DGSYSTEM/kyeupdb/tempfile/temp.274.978829379&apos; SIZE 1024M REUSE AUTOEXTEND OFF;-- End of tempfile additions. 操作：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667[BEGIN] 2018/6/22 21:28:55SQL&gt; shutdown immediate;Database closed.Database dismounted.ORACLE instance shut down.SQL&gt; startup nomount;ORACLE instance started.Total System Global Area 3858223104 bytesFixed Size 2259080 bytesVariable Size 788531064 bytesDatabase Buffers 3053453312 bytesRedo Buffers 13979648 bytesCREATE CONTROLFILE REUSE DATABASE &quot;KYEUPDB&quot; NORESETLOGS NOARCHIVELOG MAXLOGFILES 16 MAXLOGMEMBERS 3 MAXDATAFILES 4096 MAXINSTANCES 8 MAXLOGHISTORY 292LOGFILE GROUP 1 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_1.266.978829167&apos; SIZE 200M BLOCKSIZE 512, GROUP 2 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_2.267.978829169&apos; SIZE 200M BLOCKSIZE 512, GROUP 3 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_3.268.978829173&apos; SIZE 200M BLOCKSIZE 512, GROUP 4 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_4.269.978829183&apos; SIZE 200M BLOCKSIZE 512, GROUP 5 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_5.270.978829193&apos; SIZE 200M BLOCKSIZE 512DATAFILE &apos;+DGSYSTEM/kyeupdb/datafile/system.271.978829205&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/sysaux.272.978829265&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/undotbs1.273.978829323&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/users.275.978829391&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/ts_example.277.978855421&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/kye_tbs02.dbf&apos;CHARACTER SET ZHS16GBK 21 ;Control file created.SQL&gt; recover database;ORA-00283: recovery session canceled due to errorsORA-00264: no recovery requiredSQL&gt; alter database open;Database altered.SQL&gt; select * from dba_temp_files;no rows selectedALTER TABLESPACE TEMP ADD TEMPFILE &apos;+DGSYSTEM/kyeupdb/tempfile/temp.274.978829379&apos; 2 SIZE 1024M REUSE AUTOEXTEND OFF;Tablespace altered.SQL&gt; select * from dba_temp_files;FILE_NAME-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- FILE_ID TABLESPACE_NAME BYTES BLOCKS STATUS RELATIVE_FNO AUT MAXBYTES MAXBLOCKS INCREMENT_BY USER_BYTES USER_BLOCKS---------- ------------------------------ ---------- ---------- ------- ------------ --- ---------- ---------- ------------ ---------- -----------+DGSYSTEM/kyeupdb/tempfile/temp.274.978829379 1 TEMP 1073741824 131072 ONLINE 1 NO 0 0 1072693248 130944[END] 2018/6/22 21:49:09 RESETLOGS1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253-- Set #2. RESETLOGS case---- The following commands will create a new control file and use it-- to open the database.-- Data used by Recovery Manager will be lost.-- The contents of online logs will be lost and all backups will-- be invalidated. Use this only if online logs are damaged.-- After mounting the created controlfile, the following SQL-- statement will place the database in the appropriate-- protection mode:-- ALTER DATABASE SET STANDBY DATABASE TO MAXIMIZE PERFORMANCESTARTUP NOMOUNTCREATE CONTROLFILE REUSE DATABASE &quot;KYEUPDB&quot; RESETLOGS NOARCHIVELOG MAXLOGFILES 16 MAXLOGMEMBERS 3 MAXDATAFILES 4096 MAXINSTANCES 8 MAXLOGHISTORY 292LOGFILE GROUP 1 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_1.266.978829167&apos; SIZE 200M BLOCKSIZE 512, GROUP 2 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_2.267.978829169&apos; SIZE 200M BLOCKSIZE 512, GROUP 3 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_3.268.978829173&apos; SIZE 200M BLOCKSIZE 512, GROUP 4 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_4.269.978829183&apos; SIZE 200M BLOCKSIZE 512, GROUP 5 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_5.270.978829193&apos; SIZE 200M BLOCKSIZE 512-- STANDBY LOGFILEDATAFILE &apos;+DGSYSTEM/kyeupdb/datafile/system.271.978829205&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/sysaux.272.978829265&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/undotbs1.273.978829323&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/users.275.978829391&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/ts_example.277.978855421&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/kye_tbs02.dbf&apos;CHARACTER SET ZHS16GBK;-- Commands to re-create incarnation table-- Below log names MUST be changed to existing filenames on-- disk. Any one log file from each branch can be used to-- re-create incarnation records.-- ALTER DATABASE REGISTER LOGFILE &apos;/oracle/app/oracle/product/11.2.0/dbs/arch1_1_978829161.dbf&apos;;-- Recovery is required if any of the datafiles are restored backups,-- or if the last shutdown was not normal or immediate.RECOVER DATABASE USING BACKUP CONTROLFILE-- Database can now be opened zeroing the online logs.ALTER DATABASE OPEN RESETLOGS;-- Files in normal offline tablespaces are now named.ALTER DATABASE RENAME FILE &apos;MISSING00006&apos; TO &apos;+DGSYSTEM/kyeupdb/datafile/kye_tbs01.dbf&apos;;-- Commands to add tempfiles to temporary tablespaces.-- Online tempfiles have complete space information.-- Other tempfiles may require adjustment.ALTER TABLESPACE TEMP ADD TEMPFILE &apos;+DGSYSTEM/kyeupdb/tempfile/temp.274.978829379&apos; SIZE 1024M REUSE AUTOEXTEND OFF;-- End of tempfile additions. 操作如下：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167[BEGIN] 2018/6/22 21:58:29SQL&gt; exitDisconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.4.0 - 64bit ProductionWith the Partitioning, Automatic Storage Management, OLAP, Data Miningand Real Application Testing options[oracle@kyeup01 ~]$ sqlplus &apos;/as sysdba&apos;SQL*Plus: Release 11.2.0.4.0 Production on Fri Jun 22 21:58:41 2018Copyright (c) 1982, 2013, Oracle. All rights reserved.Connected to:Oracle Database 11g Enterprise Edition Release 11.2.0.4.0 - 64bit ProductionWith the Partitioning, Automatic Storage Management, OLAP, Data Miningand Real Application Testing optionsSQL&gt; archive log list;Database log mode No Archive ModeAutomatic archival DisabledArchive destination /oracle/app/oracle/product/11.2.0/dbs/archOldest online log sequence 10Current log sequence 14SQL&gt; shutdown immediate;Database closed.Database dismounted.ORACLE instance shut down.CREATE CONTROLFILE REUSE DATABASE &quot;KYEUPDB&quot; RESETLOGS NOARCHIVELOG MAXLOGFILES 16 MAXLOGMEMBERS 3 MAXDATAFILES 4096 MAXINSTANCES 8 MAXLOGHISTORY 292LOGFILE GROUP 1 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_1.266.978829167&apos; SIZE 200M BLOCKSIZE 512, GROUP 2 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_2.267.978829169&apos; SIZE 200M BLOCKSIZE 512, GROUP 3 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_3.268.978829173&apos; SIZE 200M BLOCKSIZE 512, GROUP 4 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_4.269.978829183&apos; SIZE 200M BLOCKSIZE 512, GROUP 5 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_5.270.978829193&apos; SIZE 200M BLOCKSIZE 512DATAFILE &apos;+DGSYSTEM/kyeupdb/datafile/system.271.978829205&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/sysaux.272.978829265&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/undotbs1.273.978829323&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/users.275.978829391&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/ts_example.277.978855421&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/kye_tbs02.dbf&apos;CHARACTER SET ZHS16GBK 21 ;CREATE CONTROLFILE REUSE DATABASE &quot;KYEUPDB&quot; RESETLOGS NOARCHIVELOG*ERROR at line 1:ORA-01034: ORACLE not availableProcess ID: 75347Session ID: 386 Serial number: 5SQL&gt; CREATE CONTROLFILE REUSE DATABASE &quot;KYEUPDB&quot; RESETLOGS NOARCHIVELOGSIZE 512, GROUP 2 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_2.267.978829169&apos; SIZE 200M BLOCKSIZE 512, GROUP 3 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_3.268.978829173&apos; SIZE 200M BLOCKSIZE 512, GROUP 4 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_4.269.978829183&apos; SIZE 200M BLOCKSIZE 512, GROUP 5 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_5.270.978829193&apos; SIZE 200M BLOCKSIZE 512DATAFILE &apos;+DGSYSTEM/kyeupdb/datafile/system.271.978829205&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/sysaux.272.978829265&apos;, MAXLOGFILES 16 MAXLOGMEMBERS 3 MAXDATAFILES 4096 MAXINSTANCES 8 MAXLOGHISTORY 292LOGFILE GROUP 1 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_1.266.978829167&apos; SIZE 200M BLOCKSIZE 512, GROUP 2 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_2.267.978829169&apos; SIZE 200M BLOCKSIZE 512, GROUP 3 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_3.268.978829173&apos; SIZE 200M BLOCKSIZE 512, GROUP 4 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_4.269.978829183&apos; SIZE 200M BLOCKSIZE 512, GROUP 5 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_5.270.978829193&apos; SIZE 200M BLOCKSIZE 512DATAFILE &apos;+DGSYSTEM/kyeupdb/datafile/system.271.978829205&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/sysaux.272.978829265&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/undotbs1.273.978829323&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/users.275.978829391&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/ts_example.277.978855421&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/kye_tbs02.dbf&apos;CHARACTER SET ZHS16GBK 21 ;CREATE CONTROLFILE REUSE DATABASE &quot;KYEUPDB&quot; RESETLOGS NOARCHIVELOG*ERROR at line 1:ORA-01034: ORACLE not availableProcess ID: 75347Session ID: 386 Serial number: 5SQL&gt; startup nomount;ORACLE instance started.Total System Global Area 3858223104 bytesFixed Size 2259080 bytesVariable Size 788531064 bytesDatabase Buffers 3053453312 bytesRedo Buffers 13979648 bytesCREATE CONTROLFILE REUSE DATABASE &quot;KYEUPDB&quot; RESETLOGS NOARCHIVELOG MAXLOGFILES 160M BLOCKSIZE 512, GROUP 5 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_5.270.978829193&apos; SIZE 200M BLOCKSIZE 512DATAFILE &apos;+DGSYSTEM/kyeupdb/datafile/system.271.978829205&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/sysaux.272.978829265&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/undotbs1.273.978829323&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/users.275.978829391&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/ts_example.277.978855421&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/kye_tbs02.dbf&apos;CHARACTER SET ZHS16GBK MAXLOGMEMBERS 3 MAXDATAFILES 4096 MAXINSTANCES 8 MAXLOGHISTORY 292LOGFILE GROUP 1 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_1.266.978829167&apos; SIZE 200M BLOCKSIZE 512, GROUP 2 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_2.267.978829169&apos; SIZE 200M BLOCKSIZE 512, GROUP 3 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_3.268.978829173&apos; SIZE 200M BLOCKSIZE 512, GROUP 4 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_4.269.978829183&apos; SIZE 200M BLOCKSIZE 512, GROUP 5 &apos;+DGSYSTEM/kyeupdb/onlinelog/group_5.270.978829193&apos; SIZE 200M BLOCKSIZE 512DATAFILE &apos;+DGSYSTEM/kyeupdb/datafile/system.271.978829205&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/sysaux.272.978829265&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/undotbs1.273.978829323&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/users.275.978829391&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/ts_example.277.978855421&apos;, &apos;+DGSYSTEM/kyeupdb/datafile/kye_tbs02.dbf&apos;CHARACTER SET ZHS16GBK 21 ;Control file created.SQL&gt; ALTER DATABASE OPEN RESETLOGS;Database altered.ALTER TABLESPACE TEMP ADD TEMPFILE &apos;+DGSYSTEM/kyeupdb/tempfile/temp.274.978829379&apos; 2 SIZE 1024M REUSE AUTOEXTEND OFF;Tablespace altered.SQL&gt; select * from dba_temp_files;FILE_NAME-------------------------------------------------------------------------------- FILE_ID TABLESPACE_NAME BYTES BLOCKS STATUS---------- ------------------------------ ---------- ---------- -------RELATIVE_FNO AUT MAXBYTES MAXBLOCKS INCREMENT_BY USER_BYTES USER_BLOCKS------------ --- ---------- ---------- ------------ ---------- -----------+DGSYSTEM/kyeupdb/tempfile/temp.274.978829379 1 TEMP 1073741824 131072 ONLINE 1 NO 0 0 0 1072693248 130944SQL&gt; archive log list;Database log mode No Archive ModeAutomatic archival DisabledArchive destination /oracle/app/oracle/product/11.2.0/dbs/archOldest online log sequence 1Current log sequence 1SQL&gt; [END] 2018/6/22 22:10:06 如果使用 resetlogs 打开的数据库，就需要对 DB 做一次备份。resetlogs 命令表示一个数据库逻辑生存期的结束和另一个数据库逻辑生存期的开始， 每次使用 resetlogs 命令的时候，SCN 不会被重置，不过 oracle 会重置日志序列号， 而且会重置联机重做日志内容.这样做是为了防止不完全恢复后日志序列会发生冲突（因为现有日志和数据文件间有 了时间差）。在上面RESETLOGS重建控制文件的时候，归档是关闭的，如果是开启的，在开启RESETLOG之前，需要执行RECOVER DATABASE USING BACKUP CONTROLFILE]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>recovery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle 表空间的日常维护与管理]]></title>
    <url>%2F2018%2F06%2F21%2F%E8%A1%A8%E7%A9%BA%E9%97%B4%E7%9A%84%E5%88%9B%E5%BB%BA%E6%97%A5%E5%B8%B8%E7%BB%B4%E6%8A%A4%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[1、创建数据表空间 查询有关表和视图：【使用版本Oracle 11gR2】1.查看表空间信息dba_tablespacesv$tablespace2.查看数据文件dba_data_filesv$datafile3.查看临时表空间dba_temp_filesv$tempfile 当前的数据文件位置：1234567891011SQL&gt; col file_name format a60;SQL&gt; select file_name from dba_data_files;FILE_NAME------------------------------------------------------------+DGSYSTEM/kyeupdb/datafile/system.271.978829205+DGSYSTEM/kyeupdb/datafile/sysaux.272.978829265+DGSYSTEM/kyeupdb/datafile/undotbs1.273.978829323+DGSYSTEM/kyeupdb/datafile/users.275.978829391+DGSYSTEM/kyeupdb/datafile/ts_example.277.978855421+DGSYSTEM/kyeupdb/datafile/kye01.dbf6 rows selected. 创建单个数据文件的表空间123456789101112131415161718SQL&gt; select tablespace_name from dba_tablespaces;TABLESPACE_NAME------------------------------SYSTEMSYSAUXUNDOTBS1TEMPUSERSTS_EXAMPLEKYE_TBS017 rows selected.SQL&gt; create tablespace kye_tbs02 datafile &apos;+DGSYSTEM/kyeupdb/datafile/kye02.dbf&apos; size 2M 2 autoextend off 3 segment space management auto;Tablespace created. autoextend off —不自动扩展segment space management auto —自动段管理 推荐 创建多个数据文件 123456789101112131415SQL&gt; CREATE TABLESPACE kye_tbs03 LOGGING DATAFILE &apos;+DGSYSTEM/kyeupdb/datafile/kye03_1.dbf&apos; SIZE 2M AUTOEXTEND OFF, &apos;+DGSYSTEM/kyeupdb/datafile/kye03_2.dbf&apos; SIZE 2M AUTOEXTEND OFF EXTENT MANAGEMENT LOCAL SEGMENT SPACE MANAGEMENT AUTO;Tablespace created.SQL&gt; create tablespace kye_tbs04 logging datafile 2 &apos;+DGSYSTEM/kyeupdb/datafile/kye04_1.dbf&apos; size 2M autoextend on next 1M maxsize 20M, 3 &apos;+DGSYSTEM/kyeupdb/datafile/kye04_2.dbf&apos; size 2M autoextend on next 1M maxsize 20M 4 extent management local 5 segment space management auto;Tablespace created. 创建大表空间 1234SQL&gt; create bigfile tablespace kye_bigtbs1 datafile 2 &apos;+DGSYSTEM/kyeupdb/datafile/kye_bigfile1.dbf&apos; size 1G;Tablespace created. 2、创建临时表空间12345SQL&gt; create temporary tablespace kye_tmptbs1 2 tempfile &apos;+DGSYSTEM/kyeupdb/datafile/kye_tmptbs1.dbf&apos; 3 size 5M autoextend off;Tablespace created. 3、创建 UNDO 表空间12345SQL&gt; create undo tablespace kye_undotbs1 2 datafile &apos;+DGSYSTEM/kyeupdb/datafile/kye_undo1.dbf&apos; 3 size 10m autoextend off;Tablespace created. 4、表空间的扩展与修改大小 表空间的扩展 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556--- 查看此时创建的表空间SQL&gt; col name format a30;SQL&gt; select * from v$tablespace; TS# NAME INC BIG FLA ENC---------- ------------------------------ --- --- --- --- 0 SYSTEM YES NO YES 1 SYSAUX YES NO YES 2 UNDOTBS1 YES NO YES 3 TEMP NO NO YES 4 USERS YES NO YES 5 TS_EXAMPLE YES NO YES 7 KYE_TBS01 YES NO YES 8 KYE_TBS02 YES NO YES 9 KYE_TBS03 YES NO YES 10 KYE_TBS04 YES NO YES 11 KYE_BIGTBS1 YES YES YES TS# NAME INC BIG FLA ENC---------- ------------------------------ --- --- --- --- 12 KYE_TMPTBS1 NO NO YES 13 KYE_UNDOTBS1 YES NO YES13 rows selected.SQL&gt; col file_name format a55;SQL&gt; select file_name from dba_data_files;FILE_NAME-------------------------------------------------------+DGSYSTEM/kyeupdb/datafile/system.271.978829205+DGSYSTEM/kyeupdb/datafile/sysaux.272.978829265+DGSYSTEM/kyeupdb/datafile/undotbs1.273.978829323+DGSYSTEM/kyeupdb/datafile/users.275.978829391+DGSYSTEM/kyeupdb/datafile/ts_example.277.978855421+DGSYSTEM/kyeupdb/datafile/kye01.dbf+DGSYSTEM/kyeupdb/datafile/kye02.dbf+DGSYSTEM/kyeupdb/datafile/kye03_1.dbf+DGSYSTEM/kyeupdb/datafile/kye03_2.dbf+DGSYSTEM/kyeupdb/datafile/kye04_1.dbf+DGSYSTEM/kyeupdb/datafile/kye04_2.dbfFILE_NAME-------------------------------------------------------+DGSYSTEM/kyeupdb/datafile/kye_bigfile1.dbf+DGSYSTEM/kyeupdb/datafile/kye_undo1.dbf13 rows selected.SQL&gt; alter tablespace kye_tbs01 add datafile &apos;+DGSYSTEM/kyeupdb/datafile/kye01_1.dbf&apos; size 2m autoextend off;Tablespace altered.SQL&gt; alter tablespace kye_tmptbs1 add tempfile &apos;+DGSYSTEM/kyeupdb/datafile/kye_tmptbs1_1.dbf&apos; size 2m autoextend off;Tablespace altered. 修改大小 123456789101112131415161718192021SQL&gt; col name format a55;SQL&gt; select name,bytes/1024/1024 from v$tempfile;NAME BYTES/1024/1024------------------------------------------------------- ---------------+DGSYSTEM/kyeupdb/tempfile/temp.274.978829379 1024+DGSYSTEM/kyeupdb/datafile/kye_tmptbs1.dbf 5+DGSYSTEM/kyeupdb/datafile/kye_tmptbs1_1.dbf 2SQL&gt; alter database tempfile &apos;+DGSYSTEM/kyeupdb/datafile/kye_tmptbs1.dbf&apos; resize 6m;Database altered.SQL&gt; select name,bytes/1024/1024 from v$tempfile;NAME BYTES/1024/1024------------------------------------------------------- ---------------+DGSYSTEM/kyeupdb/tempfile/temp.274.978829379 1024+DGSYSTEM/kyeupdb/datafile/kye_tmptbs1.dbf 6+DGSYSTEM/kyeupdb/datafile/kye_tmptbs1_1.dbf 2 5、表空间重命名123SQL&gt; alter tablespace kye_bigtbs1 rename to kye_bigtbs;Tablespace altered. 6、表空间的删除 drop tablespace 表空间名字；–直接删除表空间，而不删除对应的数据文件drop tablespace 表空间名字 including contents and datafiles; –加上该选项 则连同数据文件 一起删除了(常用） 1234567SQL&gt; drop tablespace kye_tbs04 including contents and datafiles;Tablespace dropped.SQL&gt; drop tablespace kye_bigtbs including contents and datafiles cascade constraints;Tablespace dropped. 7、更改表空间的读写模式1234567SQL&gt; alter tablespace kye_tbs03 read only;Tablespace altered.SQL&gt; alter tablespace kye_tbs03 read write;Tablespace altered. 也可以修改表：1234567891011SQL&gt; create table kye001 (id int,name varchar2(22));Table created.SQL&gt; alter table kye001 read only;Table altered.SQL&gt; alter table kye001 read write;Table altered. 8、更改表空间的在线模式1234567alter tablespace kye_tbs01 offline;Tablespace altered.SQL&gt; alter tablespace kye_tbs01 online;Tablespace altered. 在上面的测试中可以看出，直接可以设置表空间离线，但是在下面的操作中可以对数据文件直接设置成离线吗？可以对数据文件进行操作：123alter database datafile 9 offline;alter database datafile &apos;+DGSYSTEM/kyeupdb/datafile/kye03_2.dbf&apos; online;alter database datafile 9 offline for drop; 在对数据文件操作的时候会出现错误：除非启用了介质恢复, 否则不允许立即脱机.在NOARCHIVELOG模式，不可以立即离线数据文件。]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>maintenance</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DDL、DML、DCL、DQL的理解]]></title>
    <url>%2F2018%2F06%2F21%2FDDL%E3%80%81DML%E3%80%81DCL%20%E7%9A%84%E7%90%86%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[DDL、DML 和 DCL 的理解 DDL（data definition language）数据库定义语言 的主要语句（操作） Create 语句：可以创建数据库和数据库的一些对象。 Drop 语句：可以删除数据表、索引、触发程序、条件约束以及数据表的权限等。 Alter 语句：修改数据表定义及属性。 DML（data manipulation language）数据操纵语言 的主要语句（操作） Insert 语句：向数据表张插入一条记录。 Delete 语句：删除数据表中的一条或多条记录，也可以删除数据表中的所有记录，但是，它的操 作对象仍是记录。 Update 语句：用于修改已存在表中的记录的内容。 DCL（Data Control Language）数据库控制语言 的主要语句（操作） Grant 语句：允许对象的创建者给某用户或某组或所有用户（PUBLIC）某些特定的权限。 Revoke 语句：可以废除某用户或某组或所有用户访问权限 DQL select 查询语句]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>基础知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[debian 9 安装AMD驱动]]></title>
    <url>%2F2018%2F06%2F20%2Fdebian%209%20%E5%AE%89%E8%A3%85AMD%E9%A9%B1%E5%8A%A8%2F</url>
    <content type="text"><![CDATA[debian 9 安装AMD驱动 需求说明： 安装完成debian系统后独显驱动未安装操作系统版本： 123456kyeup@Taishiji:~$ lsb_release -aNo LSB modules are available.Distributor ID: DebianDescription: Debian GNU/Linux 9.4 (stretch)Release: 9.4Codename: stretch 安装驱动之前：1234567891011121314151617kyeup@Taishiji:~$ sudo lshw -c video[sudo] password for kyeup: *-display UNCLAIMED description: VGA compatible controller product: Whistler LE [Radeon HD 6610M/7610M] vendor: Advanced Micro Devices, Inc. [AMD/ATI] physical id: 0 bus info: pci@0000:01:00.0 version: 00 width: 64 bits clock: 33MHz capabilities: pm pciexpress msi vga_controller bus_master cap_list configuration: latency=0 resources: memory:c0000000-cfffffff memory:fea20000-fea3ffff ioport:e000(size=256) memory:c0000-dffff``` **configuration: latency=0 ** ## 安装驱动： kyeup@Taishiji:~$ sudo apt install firmware-linux-nonfree1## 安装驱动之后： kyeup@Taishiji:~$ sudo lshw -c video[sudo] password for kyeup: *-display description: VGA compatible controller product: Whistler LE [Radeon HD 6610M/7610M] vendor: Advanced Micro Devices, Inc. [AMD/ATI] physical id: 0 bus info: pci@0000:01:00.0 version: 00 width: 64 bits clock: 33MHz capabilities: pm pciexpress msi vga_controller bus_master cap_list rom configuration: driver=radeon latency=0 resources: irq:43 memory:c0000000-cfffffff memory:fea20000-fea3ffff ioport:e000(size=256) memory:c0000-dffff`configuration: driver=radeon latency=0有driver=radeon 内容代表驱动已经安装完成。]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>debian</tag>
        <tag>driver</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Debian 9 更新 sourrce.list(163源）]]></title>
    <url>%2F2018%2F06%2F18%2FDebian%209%20%E6%9B%B4%E6%96%B0%20sourrce.list(163%E6%BA%90%EF%BC%89%2F</url>
    <content type="text"><![CDATA[Debian 9 更新 sourrce.list(163源）需求说明：更新apt-get源12345678910111213141516171819202122232425262728kyeup@kyeup-nas:~$ lsb_release -aNo LSB modules are available.Distributor ID: DebianDescription: Debian GNU/Linux 9.4 (stretch)Release: 9.4Codename: stretchkyeup@kyeup-nas:~$ cat /etc/apt/source-list# deb cdrom:[Debian GNU/Linux 9.4.0 _Stretch_ - Official amd64 xfce-CD Binary-1 20180310-11:21]/ stretch main#deb cdrom:[Debian GNU/Linux 9.4.0 _Stretch_ - Official amd64 xfce-CD Binary-1 20180310-11:21]/ stretch main#deb http://mirrors.163.com/debian/ stretch main#deb-src http://mirrors.163.com/debian/ stretch main#deb http://security.debian.org/debian-security stretch/updates main#deb-src http://security.debian.org/debian-security stretch/updates main# stretch-updates, previously known as &apos;volatile&apos;#deb http://mirrors.163.com/debian/ stretch-updates main#deb-src http://mirrors.163.com/debian/ stretch-updates maindeb http://mirrors.163.com/debian/ stretch main non-free contribdeb http://mirrors.163.com/debian/ stretch-updates main non-free contribdeb http://mirrors.163.com/debian/ stretch-backports main non-free contribdeb-src http://mirrors.163.com/debian/ stretch main non-free contribdeb-src http://mirrors.163.com/debian/ stretch-updates main non-free contribdeb-src http://mirrors.163.com/debian/ stretch-backports main non-free contribdeb http://mirrors.163.com/debian-security/ stretch/updates main non-free contribdeb-src http://mirrors.163.com/debian-security/ stretch/updates main non-free contrib 配置完成后：sudo apt-get update测试。]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>apt-get源 - debian</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自建NAS如何使用大于2TB的硬盘(从分区开始）]]></title>
    <url>%2F2018%2F06%2F18%2F%E8%87%AA%E5%BB%BANAS%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%A4%A7%E4%BA%8E2TB%E7%9A%84%E7%A1%AC%E7%9B%98%2F</url>
    <content type="text"><![CDATA[需求说明：自建NAS，自备了两块3T的硬盘，如何操作才能正常的使用？思路说明： 按照自己的需求对两块3T硬盘分区； 对分区进行格式化； 挂载到某一目录（需设置开机自动挂载） 上传文件测试； 硬盘分区 最常见的分区如下所示：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566#系统kyeup@kyeup-nas:~$ lsb_release -aNo LSB modules are available.Distributor ID: DebianDescription: Debian GNU/Linux 9.4 (stretch)Release: 9.4Codename: stretchkyeup@kyeup-nas:~$ sudo fdisk -l[sudo] kyeup 的密码：Disk /dev/sda: 74.5 GiB, 80026361856 bytes, 156301488 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: gptDisk identifier: E57E46D1-111A-4C41-BAFD-62AA237015D1Device Start End Sectors Size Type/dev/sda1 2048 1050623 1048576 512M EFI System/dev/sda2 1050624 148615167 147564544 70.4G Linux filesystem/dev/sda3 148615168 156301311 7686144 3.7G Linux swapDisk /dev/sdc: 2.7 TiB, 3000592982016 bytes, 5860533168 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisk /dev/sdb: 2.7 TiB, 3000592982016 bytes, 5860533168 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 byteskyeup@kyeup-nas:~$ sudo fdisk /dev/sdbWelcome to fdisk (util-linux 2.29.2).Changes will remain in memory only, until you decide to write them.Be careful before using the write command.Device does not contain a recognized partition table.The size of this disk is 2.7 TiB (3000592982016 bytes). DOS partition table format can not be used on drives for volumes larger than 2199023255040 bytes for 512-byte sectors. Use GUID partition table format (GPT).Created a new DOS disklabel with disk identifier 0x4d35f874.Command (m for help): nPartition type p primary (0 primary, 0 extended, 4 free) e extended (container for logical partitions)Select (default p): pPartition number (1-4, default 1): First sector (2048-4294967295, default 2048): Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (2048-4294967294, default 4294967294): Created a new partition 1 of type &apos;Linux&apos; and of size 2 TiB.Command (m for help): pDisk /dev/sdb: 2.7 TiB, 3000592982016 bytes, 5860533168 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisklabel type: dosDisk identifier: 0x4d35f874Device Boot Start End Sectors Size Id Type/dev/sdb1 2048 4294967294 4294965247 2T 83 LinuxCommand (m for help): q 根据上面的提示：1The size of this disk is 2.7 TiB (3000592982016 bytes). DOS partition table format can not be used on drives for volumes larger than 2199023255040 bytes for 512-byte sectors. Use GUID partition table format (GPT). 12Device Boot Start End Sectors Size Id Type/dev/sdb1 2048 4294967294 4294965247 2T 83 Linux MBR 分区表类型最大支持2T，对于大于2T的硬盘需要使用GPT分区。另外，fdisk只对mbr分区有效，故而使用==parted分区==。 MBR（Master Boot Record） 主引导记录，是传统的分区机制，应用于绝大多数使用BIOS的PC设备 MBR支持32位和64位系统。 MBR支持分区数量有限。 MBR只支持不超过2T的硬盘，超过2T的硬盘将只能用2T空间（有第三方解决方法）。GPT（GUID Partition Table） 全局唯一标识分区表，是一个较新的分区机制，解决了MBR很多缺点。 支持超过2T的磁盘（64位寻址空间）。fdisk最大只能建立2TB大小的分区，创建一个大于2TB的分区使用parted。 向后兼容MBR。 必须在支持uEFI的硬件上才能使用（Intel提出，用于取代BIOS）。 必须使用64位系统。 Mac、Linux系统都能支持GPT分区格式。 Windows 7/8 64bit、Windows Server 2008 64bit支持GPT。 以上就是Linux系统MBR和GPT分区的区别，总得来说GPT比MBR更先进，但是MBR的兼容性比GPT要好。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120kyeup@kyeup-nas:/sys/block$ sudo parted /dev/sdbGNU Parted 3.2Using /dev/sdbWelcome to GNU Parted! Type &apos;help&apos; to view a list of commands.(parted) p Model: ATA WD30EZRZ-64D85Y0 (scsi)Disk /dev/sdb: 3001GBSector size (logical/physical): 512B/4096BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags(parted) mkpart Partition name? []? fun1File system type? [ext2]? ext4Start? 0%End? 1T(parted) p Model: ATA WD30EZRZ-64D85Y0 (scsi)Disk /dev/sdb: 3001GBSector size (logical/physical): 512B/4096BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 1000GB 1000GB ext4 fun1(parted) mkpart Partition name? []? fun2 File system type? [ext2]? ext4Start? 1T End? 100% (parted) p Model: ATA WD30EZRZ-64D85Y0 (scsi)Disk /dev/sdb: 3001GBSector size (logical/physical): 512B/4096BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 1000GB 1000GB ext4 fun1 2 1000GB 3001GB 2001GB ext4 fun2(parted) quitInformation: You may need to update /etc/fstab.kyeup@kyeup-nas:~$ sudo parted /dev/sdcGNU Parted 3.2Using /dev/sdcWelcome to GNU Parted! Type &apos;help&apos; to view a list of commands.(parted) p Model: ATA WD30EFRX-68EUZN0 (scsi)Disk /dev/sdc: 3001GBSector size (logical/physical): 512B/4096BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags(parted) mkpart Partition name? []? work1 File system type? [ext2]? ext4Start? 0% End? 1T (parted) mkpart Partition name? []? work2File system type? [ext2]? ext4 Start? 1T End? 100% (parted) p Model: ATA WD30EFRX-68EUZN0 (scsi)Disk /dev/sdc: 3001GBSector size (logical/physical): 512B/4096BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 1049kB 1000GB 1000GB ext4 work1 2 1000GB 3001GB 2001GB ext4 work2(parted) quit Information: You may need to update /etc/fstab.kyeup@kyeup-nas:~$ sudo fdisk -lDisk /dev/sda: 74.5 GiB, 80026361856 bytes, 156301488 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: gptDisk identifier: E57E46D1-111A-4C41-BAFD-62AA237015D1Device Start End Sectors Size Type/dev/sda1 2048 1050623 1048576 512M EFI System/dev/sda2 1050624 148615167 147564544 70.4G Linux filesystem/dev/sda3 148615168 156301311 7686144 3.7G Linux swapDisk /dev/sdc: 2.7 TiB, 3000592982016 bytes, 5860533168 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisklabel type: gptDisk identifier: 16CD8258-758E-4FE4-B198-DF40ABE49BE3Device Start End Sectors Size Type/dev/sdc1 2048 1953124351 1953122304 931.3G Linux filesystem/dev/sdc2 1953124352 5860532223 3907407872 1.8T Linux filesystemDisk /dev/sdb: 2.7 TiB, 3000592982016 bytes, 5860533168 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisklabel type: gptDisk identifier: BD41449F-41EB-43DB-B797-185363963AE1Device Start End Sectors Size Type/dev/sdb1 2048 1953124351 1953122304 931.3G Linux filesystem/dev/sdb2 1953124352 5860532223 3907407872 1.8T Linux filesystem Start? 0%End? 1T(parted) mkpartPartition name? []? work2File system type? [ext2]? ext4Start? 1TEnd? 100%注意此处是0% 100% 对分区进行格式化12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091kyeup@kyeup-nas:~$ sudo fdisk -lDisk /dev/sda: 74.5 GiB, 80026361856 bytes, 156301488 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisklabel type: gptDisk identifier: E57E46D1-111A-4C41-BAFD-62AA237015D1Device Start End Sectors Size Type/dev/sda1 2048 1050623 1048576 512M EFI System/dev/sda2 1050624 148615167 147564544 70.4G Linux filesystem/dev/sda3 148615168 156301311 7686144 3.7G Linux swapDisk /dev/sdc: 2.7 TiB, 3000592982016 bytes, 5860533168 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisklabel type: gptDisk identifier: 16CD8258-758E-4FE4-B198-DF40ABE49BE3Device Start End Sectors Size Type/dev/sdc1 2048 1953124351 1953122304 931.3G Linux filesystem/dev/sdc2 1953124352 5860532223 3907407872 1.8T Linux filesystemDisk /dev/sdb: 2.7 TiB, 3000592982016 bytes, 5860533168 sectorsUnits: sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 4096 bytesI/O size (minimum/optimal): 4096 bytes / 4096 bytesDisklabel type: gptDisk identifier: BD41449F-41EB-43DB-B797-185363963AE1Device Start End Sectors Size Type/dev/sdb1 2048 1953124351 1953122304 931.3G Linux filesystem/dev/sdb2 1953124352 5860532223 3907407872 1.8T Linux filesystemkyeup@kyeup-nas:~$ sudo mkfs.ext4 /dev/sdb1mke2fs 1.43.4 (31-Jan-2017)创建含有 244140288 个块（每块 4k）和 61038592 个inode的文件系统文件系统UUID：a5fc03f1-255b-4561-b3b2-9c17c324d935超级块的备份存储于下列块： 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 4096000, 7962624, 11239424, 20480000, 23887872, 71663616, 78675968, 102400000, 214990848正在分配组表： 完成 正在写入inode表： 完成 创建日志（262144 个块）完成写入超级块和文件系统账户统计信息： 已完成 kyeup@kyeup-nas:~$ sudo mkfs.ext4 /dev/sdb2mke2fs 1.43.4 (31-Jan-2017)创建含有 488425984 个块（每块 4k）和 122109952 个inode的文件系统文件系统UUID：b4e66cc9-f7c0-489b-beda-8e5a481c61e0超级块的备份存储于下列块： 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 4096000, 7962624, 11239424, 20480000, 23887872, 71663616, 78675968, 102400000, 214990848正在分配组表： 完成 正在写入inode表： 完成 创建日志（262144 个块）完成写入超级块和文件系统账户统计信息： 已完成 kyeup@kyeup-nas:~$ sudo mkfs.ext4 /dev/sdc1mke2fs 1.43.4 (31-Jan-2017)创建含有 244140288 个块（每块 4k）和 61038592 个inode的文件系统文件系统UUID：b568092d-ccba-47ca-ba38-af90db375983超级块的备份存储于下列块： 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 4096000, 7962624, 11239424, 20480000, 23887872, 71663616, 78675968, 102400000, 214990848正在分配组表： 完成 正在写入inode表： 完成 创建日志（262144 个块）完成写入超级块和文件系统账户统计信息： 已完成 kyeup@kyeup-nas:~$ sudo mkfs.ext4 /dev/sdc2mke2fs 1.43.4 (31-Jan-2017)创建含有 488425984 个块（每块 4k）和 122109952 个inode的文件系统文件系统UUID：837dfafb-3cff-4c15-9bea-33cc18abc3bb超级块的备份存储于下列块： 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 4096000, 7962624, 11239424, 20480000, 23887872, 71663616, 78675968, 102400000, 214990848正在分配组表： 完成 正在写入inode表： 完成 创建日志（262144 个块）完成写入超级块和文件系统账户统计信息： 已完成 挂载到某一目录（需设置开机自动挂载）123456789101112131415161718192021222324252627282930313233343536373839404142434445464748kyeup@kyeup-nas:~$ sudo blkid/dev/sda1: UUID=&quot;8982-B086&quot; TYPE=&quot;vfat&quot; PARTUUID=&quot;b5461768-be0f-4ff2-bccb-44ebc7f84a5d&quot;/dev/sda2: UUID=&quot;17dbffb4-ff98-4ba4-b0c0-270d0ac12f07&quot; TYPE=&quot;ext4&quot; PARTUUID=&quot;4be18a0f-4d18-47a5-8c94-580251b97803&quot;/dev/sda3: UUID=&quot;effcd1ac-b4ed-4c62-894c-66aca5fc61f2&quot; TYPE=&quot;swap&quot; PARTUUID=&quot;4a1dfc34-9c37-4345-8516-7e5d868eaef6&quot;/dev/sdc1: UUID=&quot;b568092d-ccba-47ca-ba38-af90db375983&quot; TYPE=&quot;ext4&quot; PARTLABEL=&quot;work1&quot; PARTUUID=&quot;e57513c5-a3d4-4b5d-a4a7-0ab1980f153b&quot;/dev/sdc2: UUID=&quot;837dfafb-3cff-4c15-9bea-33cc18abc3bb&quot; TYPE=&quot;ext4&quot; PARTLABEL=&quot;work2&quot; PARTUUID=&quot;0a993b35-34b6-49fc-80e3-aac086304ff0&quot;/dev/sdb1: UUID=&quot;a5fc03f1-255b-4561-b3b2-9c17c324d935&quot; TYPE=&quot;ext4&quot; PARTLABEL=&quot;fun1&quot; PARTUUID=&quot;00edb0eb-153a-41bd-9aa8-99749c1dac4a&quot;/dev/sdb2: UUID=&quot;b4e66cc9-f7c0-489b-beda-8e5a481c61e0&quot; TYPE=&quot;ext4&quot; PARTLABEL=&quot;fun2&quot; PARTUUID=&quot;dc10cdd3-4d52-47f7-be6d-85e04f7c1acd&quot;#新建挂载的目录 kyeup@kyeup-nas:~$ sudo mkdir /fun1 /fun2 /work1 /work2#编辑 /etc/fstabkyeup@kyeup-nas:~$ sudo cat /etc/fstab# /etc/fstab: static file system information.## Use &apos;blkid&apos; to print the universally unique identifier for a# device; this may be used with UUID= as a more robust way to name devices# that works even if disks are added and removed. See fstab(5).## &lt;file system&gt; &lt;mount point&gt; &lt;type&gt; &lt;options&gt; &lt;dump&gt; &lt;pass&gt;# / was on /dev/sda2 during installationUUID=17dbffb4-ff98-4ba4-b0c0-270d0ac12f07 / ext4 errors=remount-ro 0 1# /boot/efi was on /dev/sda1 during installationUUID=8982-B086 /boot/efi vfat umask=0077 0 1# swap was on /dev/sda3 during installationUUID=effcd1ac-b4ed-4c62-894c-66aca5fc61f2 none swap sw 0 0UUID=a5fc03f1-255b-4561-b3b2-9c17c324d935 /fun1 ext4 defaults 0 0UUID=b4e66cc9-f7c0-489b-beda-8e5a481c61e0 /fun2 ext4 defaults 0 0UUID=b568092d-ccba-47ca-ba38-af90db375983 /work1 ext4 defaults 0 0UUID=837dfafb-3cff-4c15-9bea-33cc18abc3bb /work2 ext4 defaults 0 0kyeup@kyeup-nas:~$ sudo mount -akyeup@kyeup-nas:~$ df -h文件系统 容量 已用 可用 已用% 挂载点udev 1.8G 0 1.8G 0% /devtmpfs 362M 5.5M 356M 2% /run/dev/sda2 69G 3.5G 62G 6% /tmpfs 1.8G 0 1.8G 0% /dev/shmtmpfs 5.0M 4.0K 5.0M 1% /run/locktmpfs 1.8G 0 1.8G 0% /sys/fs/cgroup/dev/sda1 511M 132K 511M 1% /boot/efitmpfs 362M 0 362M 0% /run/user/1000/dev/sdb1 916G 77M 870G 1% /fun1/dev/sdb2 1.8T 77M 1.7T 1% /fun2/dev/sdc1 916G 77M 870G 1% /work1/dev/sdc2 1.8T 77M 1.7T 1% /work2 上传文件测试；1234567891011121314151617kyeup@kyeup-nas:/fun2$ ls /fun[12] /work[12]/fun1:lost+found/fun2:lost+found/work1:lost+found/work2:lost+foundkyeup@kyeup-nas:/fun1$ sudo mkdir moviekyeup@kyeup-nas:/fun1$ lslost+found moviekyeup@kyeup-nas:~$ sudo chown kyeup:kyeup /fun1/movie/kyeup@kyeup-nas:/fun1/movie$ mkdir study 补充在分区的时候一定格外注意：123456789101112131415161718192021222324252627282930kyeup@kyeup-nas:~$ sudo parted /dev/sdcGNU Parted 3.2Using /dev/sdcWelcome to GNU Parted! Type &apos;help&apos; to view a list of commands.(parted) mktable New disk label type? work1parted: invalid token: work1New disk label type? gpt (parted) mkpartPartition name? []? work1 File system type? [ext2]? ext4 Start? 0 End? 1T Warning: The resulting partition is not properly aligned for best performance.Ignore/Cancel? i (parted) mkpartPartition name? []? work2 File system type? [ext2]? ext4 Start? 1T End? 100% (parted) p Model: ATA WD30EFRX-68EUZN0 (scsi)Disk /dev/sdc: 3001GBSector size (logical/physical): 512B/4096BPartition Table: gptDisk Flags: Number Start End Size File system Name Flags 1 17.4kB 1000GB 1000GB ext4 work1 2 1000GB 3001GB 2001GB ext4 work2 在start的时候，不能输入 0 或者 1，在网上大多采用这种方法，但是在后面的格式化中出现：123456789101112131415kyeup@kyeup-nas:~$ sudo mkfs.ext4 /dev/sdb1mke2fs 1.43.4 (31-Jan-2017)/dev/sdb1 未对齐，偏移了 3072 个字节。这可能导致性能下降，建议重新进行分区。创建含有 244140620 个块（每块 4k）和 61038592 个inode的文件系统文件系统UUID：d16b9bfe-8485-4795-a4ef-aeb6bf2d914e超级块的备份存储于下列块： 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 4096000, 7962624, 11239424, 20480000, 23887872, 71663616, 78675968, 102400000, 214990848正在分配组表： 完成 正在写入inode表： 完成 创建日志（262144 个块）完成写入超级块和文件系统账户统计信息： 已完成 所以出现了“4K对齐”的问题，网上有解决办法，但是试过不行之有效，所以最好的办法是使用百分比（%）的方式划分。 希望大家遇到此类问题能很快的解决！o(∩_∩)o]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>NAS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[oracle11gR2下scott用户以及表的建立]]></title>
    <url>%2F2018%2F06%2F15%2Foracle11gR2%E4%B8%8Bscott%E7%94%A8%E6%88%B7%E4%BB%A5%E5%8F%8A%E8%A1%A8%E7%9A%84%E5%BB%BA%E7%AB%8B%2F</url>
    <content type="text"><![CDATA[oracle11gR2下scott用户以及表的建立 在oralce数据库安装完成之后，没有scott用户以及练习表，如何建立用户以及系统提供的表呢？ 操作步骤： 找到系统带的sql文件（utlsample.sql）12345[root@kyeup01 admin]# pwd/oracle/app/oracle/product/11.2.0/rdbms/admin[root@kyeup01 admin]# ll utlsampl.sql -rw-r--r--. 1 oracle oinstall 3676 6月 2 2006 utlsampl.sql` 根据SQL的内容操作新建用户并授权 1234567891011-- 删除系统带的用户DROP USER SCOTT CASCADE;DROP USER ADAMS CASCADE;DROP USER JONES CASCADE;DROP USER CLARK CASCADE;DROP USER BLAKE CASCADE;&lt;!-- more --&gt;-- 授权scott相应的权限GRANT CONNECT,RESOURCE,UNLIMITED TABLESPACE TO SCOTT IDENTIFIED BY tiger;DROP PUBLIC SYNONYM PARTS; scott登录12345678910[oracle@kyeup01 admin]$ sqlplus &apos;/as sysdba&apos;SQL*Plus: Release 11.2.0.4.0 Production on Fri Jun 15 11:31:17 2018Copyright (c) 1982, 2013, Oracle. All rights reserved.Connected to:Oracle Database 11g Enterprise Edition Release 11.2.0.4.0 - 64bit ProductionWith the Partitioning, Automatic Storage Management, OLAP, Data Miningand Real Application Testing optionsSQL&gt; conn scott/tiger;Connected. 表操作1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465CREATE TABLE DEPT (DEPTNO NUMBER(2) CONSTRAINT PK_DEPT PRIMARY KEY, DNAME VARCHAR2(14) , LOC VARCHAR2(13) ) ;CREATE TABLE EMP (EMPNO NUMBER(4) CONSTRAINT PK_EMP PRIMARY KEY, ENAME VARCHAR2(10), JOB VARCHAR2(9), MGR NUMBER(4), HIREDATE DATE, SAL NUMBER(7,2), COMM NUMBER(7,2), DEPTNO NUMBER(2) CONSTRAINT FK_DEPTNO REFERENCES DEPT);INSERT INTO DEPT VALUES (10,&apos;ACCOUNTING&apos;,&apos;NEW YORK&apos;);INSERT INTO DEPT VALUES (20,&apos;RESEARCH&apos;,&apos;DALLAS&apos;);INSERT INTO DEPT VALUES (30,&apos;SALES&apos;,&apos;CHICAGO&apos;);INSERT INTO DEPT VALUES (40,&apos;OPERATIONS&apos;,&apos;BOSTON&apos;);INSERT INTO EMP VALUES(7369,&apos;SMITH&apos;,&apos;CLERK&apos;,7902,to_date(&apos;17-12-1980&apos;,&apos;dd-mm-yyyy&apos;),800,NULL,20);INSERT INTO EMP VALUES(7499,&apos;ALLEN&apos;,&apos;SALESMAN&apos;,7698,to_date(&apos;20-2-1981&apos;,&apos;dd-mm-yyyy&apos;),1600,300,30);INSERT INTO EMP VALUES(7521,&apos;WARD&apos;,&apos;SALESMAN&apos;,7698,to_date(&apos;22-2-1981&apos;,&apos;dd-mm-yyyy&apos;),1250,500,30);INSERT INTO EMP VALUES(7566,&apos;JONES&apos;,&apos;MANAGER&apos;,7839,to_date(&apos;2-4-1981&apos;,&apos;dd-mm-yyyy&apos;),2975,NULL,20);INSERT INTO EMP VALUES(7654,&apos;MARTIN&apos;,&apos;SALESMAN&apos;,7698,to_date(&apos;28-9-1981&apos;,&apos;dd-mm-yyyy&apos;),1250,1400,30);INSERT INTO EMP VALUES(7698,&apos;BLAKE&apos;,&apos;MANAGER&apos;,7839,to_date(&apos;1-5-1981&apos;,&apos;dd-mm-yyyy&apos;),2850,NULL,30);INSERT INTO EMP VALUES(7782,&apos;CLARK&apos;,&apos;MANAGER&apos;,7839,to_date(&apos;9-6-1981&apos;,&apos;dd-mm-yyyy&apos;),2450,NULL,10);INSERT INTO EMP VALUES(7788,&apos;SCOTT&apos;,&apos;ANALYST&apos;,7566,to_date(&apos;13-JUL-87&apos;,&apos;dd-mm-rr&apos;)-85,3000,NULL,20);INSERT INTO EMP VALUES(7839,&apos;KING&apos;,&apos;PRESIDENT&apos;,NULL,to_date(&apos;17-11-1981&apos;,&apos;dd-mm-yyyy&apos;),5000,NULL,10);INSERT INTO EMP VALUES(7844,&apos;TURNER&apos;,&apos;SALESMAN&apos;,7698,to_date(&apos;8-9-1981&apos;,&apos;dd-mm-yyyy&apos;),1500,0,30);INSERT INTO EMP VALUES(7876,&apos;ADAMS&apos;,&apos;CLERK&apos;,7788,to_date(&apos;13-JUL-87&apos;, &apos;dd-mm-rr&apos;)-51,1100,NULL,20);INSERT INTO EMP VALUES(7900,&apos;JAMES&apos;,&apos;CLERK&apos;,7698,to_date(&apos;3-12-1981&apos;,&apos;dd-mm-yyyy&apos;),950,NULL,30);INSERT INTO EMP VALUES(7902,&apos;FORD&apos;,&apos;ANALYST&apos;,7566,to_date(&apos;3-12-1981&apos;,&apos;dd-mm-yyyy&apos;),3000,NULL,20);INSERT INTO EMP VALUES(7934,&apos;MILLER&apos;,&apos;CLERK&apos;,7782,to_date(&apos;23-1-1982&apos;,&apos;dd-mm-yyyy&apos;),1300,NULL,10);CREATE TABLE BONUS ( ENAME VARCHAR2(10) , JOB VARCHAR2(9) , SAL NUMBER, COMM NUMBER ) ;CREATE TABLE SALGRADE ( GRADE NUMBER, LOSAL NUMBER, HISAL NUMBER );INSERT INTO SALGRADE VALUES (1,700,1200);INSERT INTO SALGRADE VALUES (2,1201,1400);INSERT INTO SALGRADE VALUES (3,1401,2000);INSERT INTO SALGRADE VALUES (4,2001,3000);INSERT INTO SALGRADE VALUES (5,3001,9999);COMMIT; 查询表（使用pl/sql） 疑问以上的方法可能不是最优的方法，相当于把utlsample.sql手工执行了。网上的资料大都是这样执行的：123456789[oracle@kyeup01 admin]$ sqlplus &apos;/as sysdba&apos;SQL*Plus: Release 11.2.0.4.0 Production on Fri Jun 15 11:46:27 2018Copyright (c) 1982, 2013, Oracle. All rights reserved.Connected to:Oracle Database 11g Enterprise Edition Release 11.2.0.4.0 - 64bit ProductionWith the Partitioning, Automatic Storage Management, OLAP, Data Miningand Real Application Testing optionsSQL&gt; @/oracle/app/oracle/product/11.2.0/rdbms/admin/utlsample.sqlSP2-0310: unable to open file &quot;/oracle/app/oracle/product/11.2.0/rdbms/admin/utlsample.sql&quot; 其实命令操作错误，正确的操作如下：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394[oracle@kyeup01 admin]$ sqlplus &apos;/as sysdba&apos;SQL*Plus: Release 11.2.0.4.0 Production on Fri Jun 15 11:46:27 2018Copyright (c) 1982, 2013, Oracle. All rights reserved.Connected to:Oracle Database 11g Enterprise Edition Release 11.2.0.4.0 - 64bit ProductionWith the Partitioning, Automatic Storage Management, OLAP, Data Miningand Real Application Testing optionsSQL&gt;start /oracle/app/oracle/product/11.2.0/rdbms/admin/utlsampl.sqlTable created.Table created.1 row created.1 row created.1 row created.1 row created.1 row created.1 row created.1 row created.1 row created.1 row created.1 row created.1 row created.1 row created.1 row created.1 row created.1 row created.1 row created.1 row created.1 row created.Table created.Table created.1 row created.1 row created.1 row created.1 row created.1 row created.Commit complete.Disconnected from Oracle Database 11g Enterprise Edition Release 11.2.0.4.0 - 64bit ProductionWith the Partitioning, Automatic Storage Management, OLAP, Data Miningand Real Application Testing options 正解！]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>troubleshooting</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RHEL6.0 yum源设置]]></title>
    <url>%2F2018%2F06%2F14%2FRHEL6.0%20yum%E6%BA%90%E8%AE%BE%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[设置163yum源卸载系统的yum1[root@db01 ~]#rpm -qa | grep yum | xargs rpm -e --nodeps 检查是否已经卸载完成1[root@db01 ~]#rpm -qa | grep yum | 下载yum以及相关包12345[root@db01 ~]# cd /tmp/[root@db01 tmp]# wget http://mirrors.163.com/centos/6/os/x86_64/Packages/yum-3.2.29-81.el6.centos.noarch.rpm[root@db01 tmp]# wget http://mirrors.163.com/centos/6/os/x86_64/Packages/python-iniparse-0.3.1-2.1.el6.noarch.rpm[root@db01 tmp]# wget http://mirrors.163.com/centos/6/os/x86_64/Packages/yum-metadata-parser-1.1.2-16.el6.x86_64.rpm[root@db01 tmp]# wget http://mirrors.163.com/centos/6/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.30-40.el6.noarch.rpm 安装yum相关rpm包12[root@db01 tmp]# rpm -ivh python-iniparse-0.3.1-2.1.el6.noarch.rpm [root@db01 tmp]# rpm -ivh yum-metadata-parser-1.1.2-16.el6.x86_64.rpm 安装yum-3.2.29-81.el6.centos.noarch.rpm的时候提示需要安装python-urlgrabber-3.9.1-11.el6.noarch.rpm，下载相应的包，但是在安装python-urlgrabber-3.9.1-11.el6.noarch.rpm的时候提示： warning: /root/python-urlgrabber-3.9.1-11.el6.noarch.rpm: Header V3 RSA/SHA1 Signature, key ID c105b9de: NOKEY 先下载RPM-GPG-KEY-CentOS-6的命令如下1wget http://mirrors.163.com/centos/RPM-GPG-KEY-CentOS-6 然后运行rpm –import RPM* 安装完成 python-urlgrabber-3后继续：【有顺序，有依赖】1[root@db01 tmp]# rpm -ivh yum-plugin-fastestmirror-1.1.30-40.el6.noarch.rpm yum-3.2.29-81.el6.centos.noarch.rpm 清除原有缓存，建立yum列表12[root@db01 tmp]# yum clean all[root@db01 tmp]# yum makecache 备注：以上的操作步骤来自网络，实际应用没有问题，这是联网状态下更新yum源；其实在生产环境下不一定能连接外网，用的最多的是把安装盘mount到本地，设置本地yum源。 本地yum源设置挂载本地光盘123456789[root@db01 ~]# mount /dev/cdrom /mntmount: block device /dev/sr0 is write-protected, mounting read-only[root@db01 ~]# df -hFilesystem Size Used Avail Use% Mounted on/dev/sda1 42G 5.4G 34G 14% /tmpfs 2.0G 90M 1.9G 5% /dev/shm/dev/sdb1 45G 9.0G 34G 22% /oracle/dev/sdc1 40G 4.5G 33G 12% /soft/dev/sr0 3.6G 3.6G 0 100% /mnt 修改配置文件在结尾出添加以下内容后保存 123456[root@db01 ~]# vi /etc/yum.conf [RHEL]name =Linux 6.5 DVDbaseurl=file:///mnt/Server/gpgcheck=0enabled=1 测试安装rpm包~]# yum install lrzsz*1234567Loaded plugins: product-id, refresh-packagekit, security, subscription-managerThis system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.RHEL | 3.9 kB 00:00 ... Setting up Install ProcessPackage lrzsz-0.12.20-27.1.el6.x86_64 already installed and latest versionNothing to do[root@db01 ~]# 备注：在项目实施中，遇到此类问题，游刃有余才行哟^_^.]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>yum源 - linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[呼叫中心坐席功能都有哪些]]></title>
    <url>%2F2018%2F06%2F13%2F%E5%91%BC%E5%8F%AB%E4%B8%AD%E5%BF%83%E5%9D%90%E5%B8%AD%E5%8A%9F%E8%83%BD%E9%83%BD%E6%9C%89%E5%93%AA%E4%BA%9B%2F</url>
    <content type="text"><![CDATA[IPCC是IP呼叫中心（IP CallCenter）的简称，本质上是以IP技术和IP语音为主要应用技术的呼叫中心构建方式，即利用IP传输网来传输与交换语音、图像和文本等信息。（摘自 百度百科） 为什么写这篇文章呢？首先 ，这与我的工作有关系，从事这门行业时间久了，有些身边的家人朋友还不清楚自己做什么的（可能隔行如隔山，真的不懂）。其实IP呼叫中心只是我接触的项目中的一小部分，在此举例说明下生活中常见的呼叫中心，比如中国移动的10086客服热线、电信公司10000号、预定火车票12306、顺丰快递95338热线等，打电话进去听到语音导航，转接，业务的自助查询办理，以上说的这些都是呼叫中心平台的典型应用（估计很多小伙伴都知道我是做什么的了，o(∩_∩)o ）。 另外，与一些做业务系统开发的合作伙伴沟通时，涉及IPCC的一些功能不了解（请耐心对待没接触IP语音行业的小伙伴们），为此科普下呼叫中心坐席人员用到的一些功能,希望有多多少少的帮助。 呼叫中心坐席功能有哪些呢？普通坐席条(以厂家大唐高鸿提供的坐席条为例) 复位：可以在坐席工具条的状态非正常时，重新使状态条的工作状态恢复初试状态，从而继续正常工作。 置忙：表示坐席员现在正在接电话或处理别的事情，这时电话不会被分配到该坐席。 置闲：表示坐席员现在的状态可以正常接电话，这时如有电话会分配到该坐席。 外拨：往外拨电话。 取消外拨：在外拨时，对方摘机之前，点击取消外拨，会停止外拨。 保持：在通话状态点击保持，会进入保持状态，被叫方进入放音状态。 取保持：在保持状态点击取保持，将会恢复通话。 挂机：在通话状态点击挂机，坐席挂机。 咨询：坐席在通话状态，输入三方号码，点击咨询按钮，被咨询方振铃，被咨询方摘机之后坐席与被咨询方建立通话，客户方放音乐。 三方：在咨询成功之后，点击三方通话按钮，建立客户，坐席，被咨询方的三方通话。 盲转：在客户与坐席建立通话状态，坐席输入坐席盲转号码，点击坐席盲转按钮，客户方放音，被盲转方振铃，坐席分机挂机，当被盲转方摘机。被盲转方与客户方建立通话。 班长坐席条(以厂家大唐高鸿提供的坐席条为例) 强置：班长坐席，输入强置状态和强置坐席号，然后点击强制状态按钮，对相应的作息状态进行强置，强置的状态包括：0离席，7强置闲，8强置忙。 监听：班长坐席，输入监听话路id点击开始监听按钮，班长坐席分机振铃，摘机就可以对话路进行监听。 停止监听话路：班长坐席，在监听话路的状态，输入停止监听话路id点击停止监听话路按钮，停止对话路的监听，班长坐席分机挂机。 强拆：班长坐席，输入强拆话路id，点击强拆话路，对相应id的坐席的通话进行强拆，被拆坐席的通话断开。 强插：班长坐席，输入强插话路id，点击强拆话路，对相应id的坐席的通话进行强插，班长坐席分机振铃，摘机完成了一个三方通话。 拦截：班长坐席，输入拦截话路id，点击拦截话路，对相应id的坐席的话路进行拦截，班长坐席分机振铃，摘机后相应id的分机挂机，变成班长与其通话的电话进行通话。 会议功能1.创建会议：点击创建会按钮，完成创建会议，创建成功后会在状态栏的会议id处显示创建的会议id。2.删除会议：输入删除会议号码，点击删除会议，会议室删除。会议添加人员：输入加入会议号码和加入人员号码，点击会议添加人员按钮，在相应的会议室添加人员。3.会议踢出人员：输入踢出会议号码和踢出人员号码，点击会议踢出人员按钮，会议室中踢出相应的人员。4.会议对人员静音：输入静音会议号码和静音人员号码，点击会议静音按钮，就会对相应的会议室的相应人员进行静音，被静音人员的声音将不被别人听见，但是可以听见会议的声音。5.会议取消对人员静音：输入取消静音会议号码和取消静音人员号码，点击取消会议静音按钮，就会对相应会议室中的相应的被静音人员进行解除静音。 备注：班长坐席包含了普通座席的全部功能，其实在实际应用中，也是根据客户的需求定制来使用的。]]></content>
      <categories>
        <category>IP语音相关</category>
      </categories>
      <tags>
        <tag>呼叫中心</tag>
      </tags>
  </entry>
</search>
